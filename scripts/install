#!/usr/bin/env bash
#
# @description install vim/nvim bundles
# @import lang/exists

main () {
    strict  true
    verbose true

    [ -d "$HOME/.vim-dist/bin/" ] && PATH="$HOME/.vim-dist/bin:$PATH"
    [ -d "$HOME/.neovim-dist/bin/" ] && PATH="$HOME/.neovim-dist/bin:$PATH"

    local executable="vim"

    if _ exists nvim
    then
        executable="nvim"
    fi

    if [ -d "${MANAGE_REPOSITORY}" ] || [ -L "${MANAGE_REPOSITORY}" ]; then
        local path
        path="${MANAGE_REPOSITORY}/bundle"
        local OPWD=$PWD ; cd "${path}" || exit

        git submodule update --init --recursive

        cd "${path}" || exit

        if [[ "${executable}" == "vim" ]]
        then
            command=`echo ${executable} -N -u "${MANAGE_REPOSITORY}/vimrc-dein" \
                -c '"try | call dein#install() | finally | qall! | endtry"' \
                -U NONE -i NONE -V1 -e -s`

            script -qc "${command}"
        fi

        if [[ "${executable}" == "nvim" ]]
        then
            "${executable}" -N -u "${MANAGE_REPOSITORY}/vimrc-dein" \
                -c 'try | call dein#install() | endtry' \
                +UpdateRemotePlugins +qa -U NONE -i NONE -V0 --headless
        fi

        [ ! -e "${MANAGE_REPOSITORY}/.ready" ] && touch "${MANAGE_REPOSITORY}/.ready"

        touch "${MANAGE_REPOSITORY}/vimrc"

        mkdir -p "${HOME}/.config"

        if [[ ! -e "${HOME}/.config/nvim" ]]
        then
            ln -s "${MANAGE_REPOSITORY}" "${HOME}/.config/nvim"
        fi

        cd "${OPWD}" || exit
    fi
}

